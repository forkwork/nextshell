name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1

jobs:
  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - style
      - test
      - doc
    steps:
      - run: exit 0

  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          path: server

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Run Rust Format Check
        run: cargo fmt --all --check
        working-directory: server

  test:
    name: Run Tests
    needs: [style]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [stable, beta, nightly, tls, no-default-features, compression]
        include:
          - build: beta
            rust: beta
          - build: nightly
            rust: nightly
            benches: true
          - build: tls
            features: "--features tls"
          - build: no-default-features
            features: "--no-default-features"
          - build: compression
            features: "--features compression"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          path: server

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust || 'stable' }}

      - name: Run Tests
        run: cargo test ${{ matrix.features }}
        working-directory: server

      - name: Run Benchmark Tests
        if: matrix.benches
        run: cargo test --benches ${{ matrix.features }}
        working-directory: server

  doc:
    name: Build Documentation
    needs: [style, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          path: server

      - name: Install Rust Toolchain (Nightly)
        uses: dtolnay/rust-toolchain@nightly

      - name: Generate Documentation
        run: cargo rustdoc -- -D broken_intra_doc_links
        working-directory: server
